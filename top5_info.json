{
  "top_5_valid_loss": [
    0.40267317494214405,
    0.40660708237625254,
    0.4080371152682315,
    0.408280450131526,
    0.408292604471956
  ],
  "top_5_train_loss": [
    0.3488684583578935,
    0.40660041296459926,
    0.4067724005883511,
    0.4089860746076116,
    0.40334762942400715
  ],
  "info": [
    {
      "lossfunc_info": {},
      "test_pct": 0.8290679578073664,
      "net_name": "ec4360cf1f63",
      "train_time": 17105.578993797302,
      "lossfunc_name": "ADAM",
      "train_pct": 0.8572866672089807,
      "net_parameters": "pcNN3D (\n  (conv1): Conv3d(3, 3, kernel_size=(3, 3, 1), stride=(1, 1, 1))\n  (conv2): Conv3d(3, 3, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n  (BN): BatchNorm3d(3, eps=1e-10, momentum=0.1, affine=True)\n  (dropout): Dropout (p = 0.0)\n  (dropout2d): Dropout2d (p=0.0)\n  (dropout3d): Dropout3d (p=0.0)\n  (fc1): Linear (192 -> 90)\n  (fc2): Linear (90 -> 2)\n)",
      "train_loss": 0.3488684583578935,
      "test_loss": 0.40267317494214405,
      "rank": 1,
      "optimizer_name": "CrossEntropy",
      "optimizer_info": [
        {
          "betas": [
            0.9,
            0.999
          ],
          "weight_decay": 0.005,
          "eps": 1e-08,
          "lr": 0.001,
          "params": [
            4409227136,
            4360425720,
            4411194096,
            4411193040,
            4411192776,
            4411192864,
            4411191896,
            4411191984,
            4411191632,
            4411191808
          ]
        }
      ]
    },
    {
      "lossfunc_info": {},
      "test_pct": 0.8699636866678194,
      "net_name": "de42f07ae99a",
      "train_time": 4868278.44688344,
      "lossfunc_name": "ADAM",
      "train_pct": 0.9073517235368458,
      "net_parameters": "pcNN3D (\n  (layer1): Sequential (\n    (0): Conv3d(3, 4, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(4, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer2): Sequential (\n    (0): Conv3d(4, 4, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(4, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer3): Sequential (\n    (0): Conv3d(4, 8, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer4): Sequential (\n    (0): Conv3d(8, 8, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer5): Sequential (\n    (0): MaxPool3d (size=(1, 2, 2), stride=(1, 2, 2), padding=0, dilation=1, ceil_mode=False)\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer6): Sequential (\n    (0): Conv3d(8, 16, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer7): Sequential (\n    (0): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer8): Sequential (\n    (0): Conv3d(16, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer9): Sequential (\n    (0): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer10): Sequential (\n    (0): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer11Dense): Sequential (\n    (0): Linear (512 -> 192)\n    (1): ReLU ()\n  )\n  (layer12Dense): Sequential (\n    (0): Linear (192 -> 90)\n    (1): ReLU ()\n  )\n  (layer13Dense): Sequential (\n    (0): Linear (90 -> 2)\n    (1): Softmax ()\n  )\n)",
      "train_loss": 0.40660041296459926,
      "valid_pct": 0.8699636866678194,
      "test_loss": 0.44313671737222626,
      "rank": 2,
      "optimizer_name": "CrossEntropy",
      "optimizer_info": [
        {
          "betas": [
            0.9,
            0.999
          ],
          "weight_decay": 0.005,
          "eps": 1e-08,
          "lr": 0.000125,
          "params": [
            4399433248,
            4399433512,
            4399434568,
            4399434744,
            4399434832,
            4399434920,
            4399435008,
            4399435096,
            4399435184,
            4399435272,
            4399435360,
            4399435448,
            4399435536,
            4399435624,
            4399435712,
            4401721416,
            4401721504,
            4401721592,
            4401721680,
            4401721768,
            4401721856,
            4401721944,
            4401722032,
            4401722120
          ]
        }
      ],
      "valid_loss": 0.40660708237625254
    },
    {
      "lossfunc_info": {},
      "test_pct": 0.8731915384171999,
      "net_name": "418af34c3d71",
      "train_time": 2432304.4639191628,
      "lossfunc_name": "ADAM",
      "train_pct": 0.9073371973097427,
      "net_parameters": "pcNN3D (\n  (layer1): Sequential (\n    (0): Conv3d(3, 4, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(4, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer2): Sequential (\n    (0): Conv3d(4, 4, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(4, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer3): Sequential (\n    (0): Conv3d(4, 8, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer4): Sequential (\n    (0): Conv3d(8, 8, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer5): Sequential (\n    (0): MaxPool3d (size=(1, 2, 2), stride=(1, 2, 2), padding=0, dilation=1, ceil_mode=False)\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer6): Sequential (\n    (0): Conv3d(8, 16, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer7): Sequential (\n    (0): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer8): Sequential (\n    (0): Conv3d(16, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer9): Sequential (\n    (0): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer10): Sequential (\n    (0): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer11Dense): Sequential (\n    (0): Linear (512 -> 192)\n    (1): ReLU ()\n  )\n  (layer12Dense): Sequential (\n    (0): Linear (192 -> 90)\n    (1): ReLU ()\n  )\n  (layer13Dense): Sequential (\n    (0): Linear (90 -> 2)\n    (1): Softmax ()\n  )\n)",
      "train_loss": 0.4067724005883511,
      "valid_pct": 0.8731915384171999,
      "test_loss": 0.4396694430283138,
      "rank": 2,
      "optimizer_name": "CrossEntropy",
      "optimizer_info": [
        {
          "betas": [
            0.9,
            0.999
          ],
          "weight_decay": 0.005,
          "eps": 1e-08,
          "lr": 0.000125,
          "params": [
            4399433248,
            4399433512,
            4399434568,
            4399434744,
            4399434832,
            4399434920,
            4399435008,
            4399435096,
            4399435184,
            4399435272,
            4399435360,
            4399435448,
            4399435536,
            4399435624,
            4399435712,
            4401721416,
            4401721504,
            4401721592,
            4401721680,
            4401721768,
            4401721856,
            4401721944,
            4401722032,
            4401722120
          ]
        }
      ],
      "valid_loss": 0.4080371152682315
    },
    {
      "lossfunc_info": {},
      "test_pct": 0.8687244221568966,
      "net_name": "fa8ba6ff397b",
      "train_time": 300843.5647075176,
      "lossfunc_name": "ADAM",
      "train_pct": 0.904954896064845,
      "net_parameters": "pcNN3D (\n  (layer1): Sequential (\n    (0): Conv3d(3, 4, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(4, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer2): Sequential (\n    (0): Conv3d(4, 4, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(4, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer3): Sequential (\n    (0): Conv3d(4, 8, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer4): Sequential (\n    (0): Conv3d(8, 8, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer5): Sequential (\n    (0): MaxPool3d (size=(1, 2, 2), stride=(1, 2, 2), padding=0, dilation=1, ceil_mode=False)\n    (1): InstanceNorm3d(8, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer6): Sequential (\n    (0): Conv3d(8, 16, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer7): Sequential (\n    (0): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(16, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer8): Sequential (\n    (0): Conv3d(16, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer9): Sequential (\n    (0): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer10): Sequential (\n    (0): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1))\n    (1): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=False)\n    (2): ReLU ()\n    (3): Dropout (p = 0.2)\n  )\n  (layer11Dense): Sequential (\n    (0): Linear (512 -> 192)\n    (1): ReLU ()\n  )\n  (layer12Dense): Sequential (\n    (0): Linear (192 -> 90)\n    (1): ReLU ()\n  )\n  (layer13Dense): Sequential (\n    (0): Linear (90 -> 2)\n    (1): Softmax ()\n  )\n)",
      "train_loss": 0.4089860746076116,
      "valid_pct": 0.8687244221568966,
      "test_loss": 0.4443357958222314,
      "rank": 2,
      "optimizer_name": "CrossEntropy",
      "optimizer_info": [
        {
          "betas": [
            0.9,
            0.999
          ],
          "weight_decay": 0.005,
          "eps": 1e-08,
          "lr": 0.000125,
          "params": [
            4399433248,
            4399433512,
            4399434568,
            4399434744,
            4399434832,
            4399434920,
            4399435008,
            4399435096,
            4399435184,
            4399435272,
            4399435360,
            4399435448,
            4399435536,
            4399435624,
            4399435712,
            4401721416,
            4401721504,
            4401721592,
            4401721680,
            4401721768,
            4401721856,
            4401721944,
            4401722032,
            4401722120
          ]
        }
      ],
      "valid_loss": 0.408280450131526
    },
    {
      "lossfunc_info": {},
      "test_pct": 0.9019333333333334,
      "net_name": "a31d9d5a6ea7",
      "train_time": 16767.909329414368,
      "lossfunc_name": "SGD",
      "train_pct": 0.9071934523809524,
      "net_parameters": "pcNN (\n  (conv1): Conv2d(3, 3, kernel_size=(3, 3), stride=(1, 1))\n  (BN): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True)\n  (dropout): Dropout (p = 0.2)\n  (dropout2d): Dropout2d (p=0.2)\n  (fc1): Linear (48 -> 24)\n  (fc2): Linear (24 -> 2)\n)",
      "train_loss": 0.40334762942400715,
      "test_loss": 0.408292604471956,
      "rank": 1,
      "optimizer_name": "CrossEntropy",
      "optimizer_info": [
        {
          "nesterov": false,
          "lr": 0.001,
          "params": [
            4581220200,
            4560825776,
            4544564832,
            4589033696,
            4589035104,
            4589034048,
            4589033784,
            4589033872
          ],
          "dampening": 0,
          "weight_decay": 0,
          "momentum": 0.9
        }
      ]
    }
  ]
}
